// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// calc_ssr
SEXP calc_ssr(arma::Mat<double> r, arma::Mat<double> s, arma::Col<double> w);
RcppExport SEXP nlsur_calc_ssr(SEXP rSEXP, SEXP sSEXP, SEXP wSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::Mat<double> >::type r(rSEXP);
    Rcpp::traits::input_parameter< arma::Mat<double> >::type s(sSEXP);
    Rcpp::traits::input_parameter< arma::Col<double> >::type w(wSEXP);
    rcpp_result_gen = Rcpp::wrap(calc_ssr(r, s, w));
    return rcpp_result_gen;
END_RCPP
}
// arma_reshape
arma::Mat<double> arma_reshape(arma::Mat<double> mm, int sizetheta);
RcppExport SEXP nlsur_arma_reshape(SEXP mmSEXP, SEXP sizethetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::Mat<double> >::type mm(mmSEXP);
    Rcpp::traits::input_parameter< int >::type sizetheta(sizethetaSEXP);
    rcpp_result_gen = Rcpp::wrap(arma_reshape(mm, sizetheta));
    return rcpp_result_gen;
END_RCPP
}
// calc_reg
SEXP calc_reg(arma::Mat<double> x, arma::Mat<double> r, arma::Mat<double> qS, arma::Col<double> w, int sizetheta, bool fullreg, double tol);
RcppExport SEXP nlsur_calc_reg(SEXP xSEXP, SEXP rSEXP, SEXP qSSEXP, SEXP wSEXP, SEXP sizethetaSEXP, SEXP fullregSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::Mat<double> >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::Mat<double> >::type r(rSEXP);
    Rcpp::traits::input_parameter< arma::Mat<double> >::type qS(qSSEXP);
    Rcpp::traits::input_parameter< arma::Col<double> >::type w(wSEXP);
    Rcpp::traits::input_parameter< int >::type sizetheta(sizethetaSEXP);
    Rcpp::traits::input_parameter< bool >::type fullreg(fullregSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(calc_reg(x, r, qS, w, sizetheta, fullreg, tol));
    return rcpp_result_gen;
END_RCPP
}
// wt_mean
SEXP wt_mean(arma::Col<double>& x, arma::Col<double>& w);
RcppExport SEXP nlsur_wt_mean(SEXP xSEXP, SEXP wSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::Col<double>& >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::Col<double>& >::type w(wSEXP);
    rcpp_result_gen = Rcpp::wrap(wt_mean(x, w));
    return rcpp_result_gen;
END_RCPP
}
// calc_robust
SEXP calc_robust(arma::Mat<double> x, arma::Mat<double> u, arma::Mat<double> qS, arma::Col<double> w, int sizetheta);
RcppExport SEXP nlsur_calc_robust(SEXP xSEXP, SEXP uSEXP, SEXP qSSEXP, SEXP wSEXP, SEXP sizethetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::Mat<double> >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::Mat<double> >::type u(uSEXP);
    Rcpp::traits::input_parameter< arma::Mat<double> >::type qS(qSSEXP);
    Rcpp::traits::input_parameter< arma::Col<double> >::type w(wSEXP);
    Rcpp::traits::input_parameter< int >::type sizetheta(sizethetaSEXP);
    rcpp_result_gen = Rcpp::wrap(calc_robust(x, u, qS, w, sizetheta));
    return rcpp_result_gen;
END_RCPP
}
